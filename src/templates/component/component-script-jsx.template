import React from 'react';
{{#propTypes}}
import propTypes from 'prop-types';
{{/propTypes}}
import './{{ fileName }}.style.{{ ext.style }}';

{{#useReducer}}
const initialState = {};

function reducer(state, action) {
  switch (action.type) {
    case 'actionType':
      return {};
    default:
      throw new Error();
  }
}
{{/useReducer}}

export const {{ componentName.pascalCase }} = props => {
{{#useReducer}}
  const [state, dispatch] = React.useReducer(reducer, initialState);

{{/useReducer}}
{{#useState}}
  const [state, setState] = React.useState({});

{{/useState}}
{{#useContext}}
  const value = React.useContext(MyContext);

{{/useContext}}
{{#useRef}}
  const refContainer = React.useRef(null);

{{/useRef}}
{{#useMemo}}
  const memoizedValue = React.useMemo(
    () => computeExpensiveValue(a, b),
    [a, b]
  );

{{/useMemo}}
{{#useCallBack}}
  const memoizedCallback = React.useCallback(
    () => doSomething(a, b),
    [a, b],
  );

{{/useCallBack}}
{{#useEffect}}
  React.useEffect(() => {

  }, []);

{{/useEffect}}
  return <div></div>;
};
{{#propTypes}}

{{ componentName.pascalCase }}.propTypes = {};
{{/propTypes}}
